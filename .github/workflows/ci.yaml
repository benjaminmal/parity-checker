name: 'Continuous integration'

on:
  pull_request: ~
  workflow_dispatch: ~
  release:
    types: [created]
  schedule:
    - cron: '0 2 * * 1,4' # At 2am on Monday & Thursday

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [7.4, 8.0]

    name: 'üöß Build application üöß | PHP ${{ matrix.php }}'

    steps:

      # --- ‚öôÔ∏è Setup ‚öôÔ∏è ----------

      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup PHP'
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: symfony
          coverage: none
        env:
          COMPOSER_TOKEN: ${{ secrets.PAT }}

      - name: 'Get Composer cache directory'
        id: composer-cache
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

      - name: 'Cache Composer'
        uses: actions/cache@v2
        with:
          path: '${{ steps.composer-cache.outputs.dir }}'
          key: "${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}"
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php }}-composer-

      - name: 'Install dependencies'
        run: 'composer update --no-interaction --no-progress --prefer-dist --ansi --verbose --no-scripts'

      # --- üõ† Test üõ† ----------

      - name: 'Validate composer.json and composer.lock'
        run: 'composer validate --strict --no-interaction --ansi --verbose'

      - name: 'Check for dump in code'
        run: 'vendor/bin/var-dump-check --symfony --exclude vendor --exclude tests .'

      - name: 'PHPStan analyse'
        run: 'vendor/bin/phpstan analyse --configuration=phpstan-ci.neon --error-format=github --no-progress --no-interaction --verbose --ansi'

      - name: 'ECS check'
        run: 'vendor/bin/ecs check src --no-progress-bar --no-interaction --verbose --ansi'

      - name: 'PHPUnit tests'
        run: 'vendor/bin/phpunit --verbose --coverage-clover ./coverage.xml --coverage-text --color=always --fail-on-incomplete --fail-on-risky --no-interaction --do-not-cache-result'

      - name: Coverage check
        id: coverage-check
        uses: johanvanhelden/gha-clover-test-coverage-check@v1
        with:
          percentage: 98
          filename: 'coverage.xml'

      - uses: actions/cache@v2
        with:
          path: ~/.symfony/cache
          key: ${{ runner.os }}-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}
          restore-keys: ${{ runner.os }}-php-

      - name: 'Check for security vulnerabilities'
        run: 'symfony security:check'
